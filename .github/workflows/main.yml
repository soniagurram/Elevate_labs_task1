name: CI/CD Pipeline
#test
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build Docker image
      run: |
        docker build -t soniagurram/fastapi-app:latest .
    - name: Save image as tar
      run: |
        docker save soniagurram/fastapi-app:latest -o fastapi-app.tar
    - name: Upload image artifact
      uses: actions/upload-artifact@v4
      with:
        name: fastapi-image
        path: fastapi-app.tar

  push:
   runs-on: ubuntu-latest
   needs: build
   steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download image artifact
      uses: actions/download-artifact@v4
      with:
        name: fastapi-image
    - name: Load image
      run: docker load -i fastapi-app.tar
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Push Docker image
      run: docker push soniagurram/fastapi-app:latest

  deploy:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'   # specify the version you want

      - name: Configure kubeconfig
        env:
          KUBE_CONFIG_BASE64: ${{ secrets.KUBE_CONFIG_BASE64 }}
        run: |
          echo "$env:KUBE_CONFIG_BASE64" | Out-File kubeconfig.base64
          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String((Get-Content kubeconfig.base64))) | Out-File kubeconfig
          $env:KUBECONFIG = "$PWD\kubeconfig"

      - name: Deploy manifests
        run: |
          kubectl apply -f deployment.yaml
  
