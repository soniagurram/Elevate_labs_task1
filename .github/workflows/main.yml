name: CI/CD Pipeline
#test
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest

  
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Validate DockerHub username
        run: |
          DOCKERHUB_USERNAME="soniagurram"
          if [ -z "$DOCKERHUB_USERNAME" ]; then
            echo "ERROR: DOCKERHUB_USERNAME is not set.";
            exit 1;
          fi
      - name: Build Docker image
        run: |
          DOCKERHUB_USERNAME="soniagurram"
          IMAGE_TAG="$DOCKERHUB_USERNAME/fastapi-app:latest"
          echo "Building image $IMAGE_TAG"
          docker build -t "$DOCKERHUB_USERNAME/fastapi-app:latest" .
        
  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        run: |
          DOCKERHUB_USERNAME="soniagurram"
          DOCKERHUB_PASSWORD="Sonia@77281"
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - name: Push Docker image
        run: |
          DOCKERHUB_USERNAME="soniagurram"
          IMAGE_TAG="$DOCKERHUB_USERNAME/fastapi-app:latest"
          echo "Pushing $IMAGE_TAG"
          docker push "$IMAGE_TAG"
   
  

  deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup kubeconfig from secret
        env:
          KUBE_CONFIG_BASE64: ${{ secrets.KUBE_CONFIG_BASE64 }}
        run: |
          if [ -n "$KUBE_CONFIG_BASE64" ]; then
            echo "$KUBE_CONFIG_BASE64" | base64 --decode > "$GITHUB_WORKSPACE"/kubeconfig
            export KUBECONFIG="$GITHUB_WORKSPACE"/kubeconfig
            echo "KUBECONFIG ready"
          else
            echo "KUBE_CONFIG_BASE64 is not set. If deploying to a local Rancher Desktop cluster, run this workflow on a self-hosted runner that has cluster access or set the KUBE_CONFIG_BASE64 secret.";
            exit 1
          fi

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/deployment.yaml

      - name: Verify rollout
        run: |
          kubectl rollout status deployment/fastapi-app --timeout=120s

      - name: Show service
        run: |
          kubectl get svc fastapi-app-service -o wide
